#spring.datasource.url=jdbc:mysql://localhost:3306/db_attempt1?useSSL=false&allowPublicKeyRetrieval=true
#spring.datasource.username=springuser
#spring.datasource.password=Ironshell45

spring.mvc.static-path-pattern=/static/**

security.oauth2.client.clientId: 984748074179-6037o1vnq6m3bpvslmm4mgb4lest5nfr.apps.googleusercontent.com
security.oauth2.client.clientSecret: 3FmA-jAsCDHDM_mkshtqKKBp
security.oauth2.client.accessTokenUri: https://www.googleapis.com/oauth2/v3/token
security.oauth2.client.userAuthorizationUri: https://accounts.google.com/o/oauth2/auth
security.oauth2.client.tokenName: oauth_token
security.oauth2.client.authenticationScheme: query
#security.oauth2.client.security.oauth2.client.clientAuthenticationScheme=form
security.oauth2.client.scope: profile
security.oauth2.resource.userInfoUri: https://www.googleapis.com/userinfo/v2/me
security.oauth2.resource.preferTokenInfo: false
#uncomment below for local
spring.jpa.hibernate.ddl-auto=create



### MULTIPART (MultipartProperties)
## Enable multipart uploads
spring.servlet.multipart.enabled=true
## Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
## Max file size.
spring.servlet.multipart.max-file-size=200MB
## Max Request Size
spring.servlet.multipart.max-request-size=215MB

## FOR HEROKU BUILD
#spring.datasource.url= jdbc:postgresql://ec2-184-73-222-192.compute-1.amazonaws.com:5432/d4pe4mvcc32mq9
#spring.datasource.username=nkvqtjttsdiqvp
#spring.datasource.password=e0e74e71530796a45ce85833dd4f41bbb7fb842878c6469d7eecc70262376633
#spring.jpa.show-sql=false
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update

